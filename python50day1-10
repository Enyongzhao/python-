8.23 
目标：1-10课

第二课

pycharm快捷键：
ctrl + j	显示可用的代码模板
ctrl + b	查看函数、类、方法的定义
ctrl + alt + l	格式化代码
alt + enter	万能代码修复快捷键
ctrl + /	注释/反注释代码
shift + shift	万能搜索快捷键
ctrl + d / ctrl + y	复制/删除一行代码
ctrl + shift + - / ctrl + shift + +	折叠/展开所有代码
F2	快速定位到错误代码
ctrl + alt + F7	查看哪些地方用到了指定的函数、类、方法

第三课 变量

int float string bool
命名规则：非硬性规则：
规则1：变量名通常使用小写英文字母，多个单词用下划线进行连接。
规则2：受保护的变量用单个下划线开头。
规则3：私有的变量用两个下划线开头。

type函数：显示变量类型

int()：将一个数值或字符串转换成整数，可以指定进制。
float()：将一个字符串转换成浮点数。
str()：将指定的对象转换成字符串形式，可以指定编码。
*chr()：将整数转换成该编码对应的字符串（一个字符）。 一个整数对应一个字符
*ord()：将字符串（一个字符）转换成对应的编码（整数）。 只能写一个字符，对应一个整数

第四课 运算符

重要：[] [:]类似数组，切片  **指数   /除法运算，可以计算出小数部分   //整除（除法得出的整数部分）
比较运算符，相等时应该用==

第五课 分支结构

if elif else
注意：后面需要跟:    并且结构与代码格式有关

第六课 循环结构

在Python中构造循环结构有两种做法，一种是for-in循环，另一种是while循环。

明确知道执行次数，用for-in循环
如：for i in range(0,101): 其中 可以取0-100的数，取不到101
range(101)：可以用来产生0到100范围的整数，需要注意的是取不到101。
range(1, 101)：可以用来产生1到100范围的整数，相当于前面是闭区间后面是开区间。
range(1, 101, 2)：可以用来产生1到100的奇数，其中2是步长，即每次递增的值。
range(100, 0, -2)：可以用来产生100到1的偶数，其中-2是步长，即每次递减的值。
当然 也可以不用range，(0,100)表示0到100的数

while循环：适用不知道具体次数

#猜数字大小并记录次数代码（随机数的生成，while的使用，注意变量类型）
import random

answer = random.randint(1,100)
counter = 0
while True:
    number = int(input('请输入一个数字'))
    if number == answer:
        print('you success')
        break
    elif number >= answer:
        print('你猜大了')
        counter += 1
    else:
        print('你猜小了')
        counter += 1
print('你总共猜了%d次'% counter)

上面的代码中使用while True构造了一个条件恒成立的循环，也就意味着如果不做特殊处理，循环是不会结束的，这也就是常说的“死循环”。
break和continue: break直接跳出循环，continue则放弃此次循环重新进入下一次循环

#打印乘法口诀表
for i in range(1, 10):
    for j in range(1, i + 1):
        print(f'{i}*{j}={i * j}', end='\t')
    print()
print时用了f-string的方法，输出乘法表中的每个元素，例如，如果 i 是 2，j 是 3，那么它会输出类似于 "2*3=6" 的字符串，并使用制表符 ('\t') 来分隔不同的元素。
